language: android
jdk: oraclejdk8
sudo: false

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/gradle/caches/
    - ${TRAVIS_BUILD_DIR}/gradle/wrapper/dists/

env:
  global:
    - EMULATOR_API_LEVEL=21
    - ANDROID_ABI=armeabi-v7a
    - ANDROID_TAG=google_apis
    - ADB_INSTALL_TIMEOUT=20 # minutes (2 minutes by default)
    
android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    - tools
    - platform-tools

    # The BuildTools version used by your project
    - build-tools-$ANDROID_BUILD_TOOLS_VERSION

    # The SDK version used to compile your project
    - android-$ANDROID_API_LEVEL
    
    # For Google APIs
    - addon-google_apis-google-$ANDROID_API_LEVEL
    - addon-google_apis-google-$EMULATOR_API_LEVEL
    # Google Play Services
    - extra-google-google_play_services
    
    # Additional components
    - extra-google-m2repository
    - extra-android-m2repository

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - android-$EMULATOR_API_LEVEL
    #- sys-img-armeabi-v7a-android-22
    - sys-img-armeabi-v7a-google_apis-$ANDROID_API_LEVEL
    - sys-img-armeabi-v7a-google_apis-$EMULATOR_API_LEVEL
  
licenses:
    - 'android-sdk-preview-license-.+'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'
    - '.+'
    
install:
    - echo y | android update sdk -u -a -t tools
    - echo y | android update sdk -u -a -t platform-tools
    - echo y | android update sdk -u -a -t build-tools-$ANDROID_BUILD_TOOLS_VERSION
    - echo y | android update sdk -u -a -t android-$ANDROID_API_LEVEL
    - echo y | android update sdk -u -a -t extra-google-m2repository
    - echo y | android update sdk -u -a -t extra-android-m2repository
before_install:
   - mkdir "$ANDROID_HOME/licenses" || true
   - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
   - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
   
# Emulator Management: Create, Start and Wait
before_script:
  - echo no | android create avd --force -n test -t "android-"$EMULATOR_API_LEVEL --abi $ANDROID_ABI --tag $ANDROID_TAG 
  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &

script:
 #connectedCheck
 #- ./gradlew build connectedCheck
